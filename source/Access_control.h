//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//	@file		Access_control.h							    //
//	@brief		Acces Control application						//
//	@author		Grupo	4										//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

#ifndef _ACCESSCONTROL_H
#define _ACCESSCONTROL_H

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//							Headers								//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stdbool.h>
#include "StateMachine/DataTypes.h"
#include "StateMachine/State_machine.h"
#include "./Drivers/Timer/timer.h"

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//		CONSTANT AND MACRO DEFINITIONS USING #DEFINE 		 	//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

#define MAX_NUM_ATTEMPTS 		3
#define MAX_DIGIT_DISPLAY 		9
#define MIN_DIGIT_DISPLAY 		0
#define MAX_IDS 				2000
#define ERR_MSG_TIME 			2
#define ID_LENGTH 				8
#define TIMEOUT_TIMER_MS		(10*1000) //10 segundos

#if (ID_LENGTH != 8)
#error ID_LENGHT must be 8! If you want to change it, you must consider the data types used to store the IDs!
#endif

SM_DECLARE(ACC)

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//			ENUMERATIONS AND STRUCTURES AND TYPEDEFS			//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//			FUNCTION PROTOTYPES WITH GLOBAL SCOPE				//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

void access_control_init(void);
/*****************************************************************
 * @brief: Initialization function for the Access control application
 *          It initializes the internal variables and the State machine
 *          in the corresponding state.
 * **************************************************************/

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//			STATE MACHINE EVENT FUNCTIONS DECLARATION			//
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

EVENT_DECLARE(Encoder_Click, NoEventData);
EVENT_DECLARE(Encoder_Double_Click, NoEventData);
EVENT_DECLARE(Encoder_CW, NoEventData);
EVENT_DECLARE(Encoder_CCW, NoEventData);
EVENT_DECLARE(Encoder_Long_Click, NoEventData);
EVENT_DECLARE(Card_Reader, NoEventData);

#endif // _ACCESSCONTROL_H
